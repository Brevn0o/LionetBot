const { SlashCommandBuilder } = require('discord.js');

const VCStatsVC = require('../../Schemas/vcstatsvc');


module.exports = {
  data: new SlashCommandBuilder()
    .setName('voicestats')
    .setDescription('–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.')
    .addSubcommand(subcommand =>
      subcommand
        .setName('setup')
        .setDescription('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ')
        .addChannelOption(option => option.setName('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π').setDescription('–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.').setRequired(false))
        .addChannelOption(option => option.setName('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤').setDescription('–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–≤–∫–ª—é—á–∞—è –±–æ—Ç–æ–≤)).').setRequired(false))
        .addChannelOption(option => option.setName('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–±–æ—Ç–æ–≤').setDescription('–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –±–æ—Ç–æ–≤.').setRequired(false))
        .addChannelOption(option => option.setName('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Ä–æ–ª–µ–π').setDescription('–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–æ–ª–µ–π.').setRequired(false))
        .addChannelOption(option => option.setName('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–∫–∞–Ω–∞–ª–æ–≤').setDescription('–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–Ω–∞–ª–æ–≤.').setRequired(false))
    )
    .addSubcommand(subcommand =>
      subcommand
        .setName('disable')
        .setDescription('–û—Ç–∫–ª—é—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞..')
    ),
  async execute(interaction) {
    const subcommand = interaction.options.getSubcommand();

    if (subcommand === 'setup') {
      const userCountChannel = interaction.options.getChannel('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      const memberCountChannel = interaction.options.getChannel('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤');
      const botCountChannel = interaction.options.getChannel('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–±–æ—Ç–æ–≤');
      const roleCountChannel = interaction.options.getChannel('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Ä–æ–ª–µ–π');
      const channelCountChannel = interaction.options.getChannel('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–∫–∞–Ω–∞–ª–æ–≤');

      if (
        !userCountChannel &&
        !memberCountChannel &&
        !botCountChannel &&
        !roleCountChannel &&
        !channelCountChannel
      ) {
        return interaction.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.');
      }

      const guildId = interaction.guild.id;

      try {
        let voiceChannels = await VCStatsVC.findOne({ guildId });
        if (!voiceChannels) {
          voiceChannels = new VCStatsVC({ guildId });
        }

        if (userCountChannel) voiceChannels.userCountChannel = userCountChannel.id;
        if (memberCountChannel) voiceChannels.memberCountChannel = memberCountChannel.id;
        if (botCountChannel) voiceChannels.botCountChannel = botCountChannel.id;
        if (roleCountChannel) voiceChannels.roleCountChannel = roleCountChannel.id;
        if (channelCountChannel) voiceChannels.channelCountChannel = channelCountChannel.id;

        await voiceChannels.save();

        const updateChannels = async () => {
          const guild = interaction.guild;
          const userCountChannel = guild.channels.cache.get(voiceChannels.userCountChannel);
          const memberCountChannel = guild.channels.cache.get(voiceChannels.memberCountChannel);
          const botCountChannel = guild.channels.cache.get(voiceChannels.botCountChannel);
          const roleCountChannel = guild.channels.cache.get(voiceChannels.roleCountChannel);
          const channelCountChannel = guild.channels.cache.get(voiceChannels.channelCountChannel);

          if (userCountChannel) userCountChannel.setName(`üë™|–í—Å–µ—Ö: ${guild.memberCount}`);
          if (memberCountChannel)
            memberCountChannel.setName(`üòÅ|–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${guild.members.cache.filter(m => !m.user.bot).size}`);
          if (botCountChannel)
            botCountChannel.setName(`ü§ñ|–ë–æ—Ç–æ–≤: ${guild.members.cache.filter(m => m.user.bot).size}`);
          if (roleCountChannel) roleCountChannel.setName(`üèÜ|–†–æ–ª–µ–π: ${guild.roles.cache.size}`);
          if (channelCountChannel) channelCountChannel.setName(`üéóÔ∏è|–ö–∞–Ω–∞–ª–æ–≤: ${guild.channels.cache.size}`);
        };

        updateChannels();
        setInterval(updateChannels, 80000);

        interaction.reply('–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!');
      } catch (error) {
        console.error(error);
        interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.');
      }
    } else if (subcommand === 'disable') {
      const guildId = interaction.guild.id;
      try {
        await VCStatsVC.findOneAndDelete({ guildId });

        // If you have stored the channel IDs in the database, you can also clear them here

        interaction.reply('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ!');
      } catch (error) {
        console.error(error);
        interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞..');
      }
    }
  },
};

