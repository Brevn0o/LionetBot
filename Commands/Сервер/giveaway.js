const { ChatInputCommandInteraction, Client, EmbedBuilder, TextInputBuilder, ActionRowBuilder, ButtonBuilder, ApplicationCommandOptionType, ModalBuilder, PermissionsBitField, TextInputStyle, SlashCommandBuilder } = require("discord.js");
const DB = require("../../Schemas/GiveawayDB");
const { endGiveaway } = require("../../Utils/GiveawayFunctions");
const disabled = require("../../Schemas/Panel/Systems/giveaway");

module.exports = {
    data: new SlashCommandBuilder()
    .setName('giveaway')
    .setDescription('–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞')
    .setDefaultMemberPermissions(PermissionsBitField.Flags.ManageGuild)
    .setDMPermission(false)
    .addSubcommand(option => 
        option.setName('create')
        .setDescription('–°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à'))
    .addSubcommand(option => 
        option.setName('manage')
            .setDescription('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π')
            .addStringOption(option => 
                option.setName('–≤–∞—Ä–∏–∞–Ω—Ç')
                .setDescription('–ß—Ç–æ –±—É–¥–µ–º —É–ø—Ä–∞–≤–ª—è—Ç—å?')
                .setRequired(true)
                .addChoices(
                    { name: "–ö–æ–Ω–µ—Ü", value: "end" }, 
                    { name: "–ü–∞—É–∑–∞", value: "pause" }, 
                    { name: "–ù–µ–ü–∞—É–∑–∞", value: "unpause" }, { name: "–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å", value: "reroll" }, 
                    { name: "–£–¥–∞–ª–∏—Ç—å", value: "delete" },))
                .addStringOption(option => 
                    option.setName('message_id')
                    .setDescription('–°–æ–æ–±—â–µ–Ω–∏–µ ID —Ä–æ–∑—ã–≥—Ä—ã—à–∞')
                    .setRequired(true))),
    /**
     * @param {ChatInputCommandInteraction} interaction
     * @param {Client} client
     */
    async execute(interaction, client) {
        const DISABLED = await disabled.findOne({ Guild: interaction.guild.id });

if (DISABLED) {
 await interaction.reply({
 content: "‚ùå –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ!",
 ephemeral: true
});
return;
}  
        const subcommand = interaction.options.getSubcommand();

        switch (subcommand) {
            case "create": {
                const prize = new ActionRowBuilder().addComponents(
                    new TextInputBuilder()
                        .setCustomId("giveaway-prize")
                        .setLabel("–ü—Ä–∏–∑")
                        .setStyle(TextInputStyle.Short)
                        .setMaxLength(256)
                        .setRequired(true)
                );

                const winners = new ActionRowBuilder().addComponents(
                    new TextInputBuilder()
                        .setCustomId("giveaway-winners")
                        .setLabel("–ü–æ–±–µ–¥–∏—Ç–µ–ª—å")
                    	.setPlaceholder("–ü—Ä–∏–º–µ—Ä: 1 –∏–ª–∏ 2")
                        .setStyle(TextInputStyle.Short)
                        .setRequired(true)
                );

                const duration = new ActionRowBuilder().addComponents(
                    new TextInputBuilder()
                        .setCustomId("giveaway-duration")
                        .setLabel("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
                        .setStyle(TextInputStyle.Short)
                        .setPlaceholder("–ü—Ä–∏–º–µ—Ä: 1 m/h/day")
                        .setRequired(true)
                );
                
                const modal = new ModalBuilder()
                    .setCustomId("giveaway-options")
                    .setTitle("–°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à")
                    .setComponents(prize, winners, duration);

                await interaction.showModal(modal);
            }
            break;

            case "manage": {
                const embed = new EmbedBuilder();
                const messageId = interaction.options.getString("message_id");
                const toggle = interaction.options.getString("–≤–∞—Ä–∏–∞–Ω—Ç");

                const data = await DB.findOne({
                    GuildID: interaction.guild.id,
                    MessageID: messageId
                });
                if (!data) {
                    embed
                        .setColor("Red")
                        .setDescription("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–∏–∫–∞–∫–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ID");
                    return interaction.reply({ embeds: [embed], ephemeral: true });
                }

                const message = (await interaction.guild.channels.cache.get(data.ChannelID).messages.fetch(messageId));
                if (!message) {
                    embed
                        .setColor("Red")
                        .setDescription("–¢–∞–∫–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
                    return interaction.reply({ embeds: [embed], ephemeral: true });
                }

                if (["end", "reroll"].includes(toggle)) {
                    if (data.Ended === (toggle === "end" ? true : false)) {
                        embed
                            .setColor("Red")
                            .setDescription(`–≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à –∏–º–µ–µ—Ç ${toggle === "end" ? "—É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è" : "–Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è"}`);
                        return interaction.reply({ embeds: [embed], ephemeral: true });
                    }

                    if (toggle === "end" && data.Paused === true) {
                        embed
                            .setColor("Red")
                            .setDescription("–≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–Ω–∏–º–∏—Ç–µ –µ–≥–æ —Å –ø–∞—É–∑—ã –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∞");
                        return interaction.reply({ embeds: [embed], ephemeral: true });
                    }

                    endGiveaway(message, (toggle === "end" ? false : true));

                    embed
                        .setColor("Green")
                        .setDescription(`–£ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –µ—Å—Ç—å ${toggle === "end" ? "–∑–∞–∫–æ–Ω—á–∏–ª—Å—è" : "–±—ã–ª –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—â–µ–Ω"}`);
                    return interaction.reply({ embeds: [embed], ephemeral: true });
                }

                if (["pause", "unpause"].includes(toggle)) {
                    if (data.Ended) {
                        embed
                            .setColor("Red")
                            .setDescription("–≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è");
                        return interaction.reply({ embeds: [embed], ephemeral: true });
                    }

                    if (data.Paused === (toggle === "pause" ? true : false)) {
                        embed
                            .setColor("Red")
                            .setDescription(`–≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à —É–∂–µ —Ç–µ–ø–µ—Ä—å –Ω–∞ ${toggle === "pause" ? "–ø–∞—É–∑–µ" : "–Ω–µ –ø–∞—É–∑–µ"}`);
                        return interaction.reply({ embeds: [embed], ephemeral: true });
                    }

                    const button = ActionRowBuilder.from(message.components[0]).setComponents(ButtonBuilder.from(message.components[0].components[0]).setDisabled(toggle === "pause" ? true : false));

                    const giveawayEmbed = EmbedBuilder.from(message.embeds[0]).setColor(toggle === "pause" ? "Yellow" : "#156789");

                    await DB.findOneAndUpdate({
                        GuildID: interaction.guild.id,
                        MessageID: message.id
                    }, { Paused: toggle === "pause" ? true : false });
                    
                    await message.edit({ content: `üéâ **–†–æ–∑—ã–≥—Ä—ã—à ${toggle === "pause" ? "–ü–∞—É–∑–∞" : "–ù–∞—á–∞–ª—Å—è"}** üéâ`, embeds: [giveawayEmbed], components: [button] });

                    embed
                        .setColor("Green")
                        .setDescription(`–≠—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à —Ç–µ–ø–µ—Ä—å –Ω–∞ ${toggle === "pause" ? "–ø–∞—É–∑–µ" : "–Ω–µ –ø–∞—É–∑–µ"}`);
                    interaction.reply({ embeds: [embed], ephemeral: true });

                    if (toggle === "unpause" && (data.EndTime * 1000) < Date.now()) endGiveaway(message);
                }

                if (toggle === "delete") {
                    await DB.deleteOne({
                        GuildID: interaction.guild.id,
                        MessageID: message.id
                    });

                    await message.delete();
                    embed
                        .setColor("Green")
                        .setDescription("–†–æ–∑—ã–≥—Ä—ã—à –±—ã–ª —É–¥–∞–ª–µ–Ω");
                    interaction.reply({ embeds: [embed], ephemeral: true });
                }
            }
            break;
        }
    },
};