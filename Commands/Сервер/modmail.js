const { SlashCommandBuilder, PermissionsBitField, EmbedBuilder, ChannelType } = require('discord.js');

const modschema = require('../../Schemas/modmailschema');

const moduses = require('../../Schemas/modmailuses');
 
module.exports = {
    data: new SlashCommandBuilder()
    .setName('modmail')
    .setDescription('–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ—é —Å–∏—Å—Ç–µ–º—É modmail.')
    .addSubcommand(command => command.setName('setup').setDescription('–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–∞—à—É —Å–∏—Å—Ç–µ–º—É modmail –¥–ª—è –≤–∞—Å.').addChannelOption(option => option.setName('–∫–∞—Ç–µ–≥–æ—Ä–∏—è').setDescription('–£–∫–∞–∑–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–ª—É—á–∏—Ç –≤–∞—à–∏ –º–∞–π–ª—ã.').setRequired(true).addChannelTypes(ChannelType.GuildCategory)))
    .addSubcommand(command => command.setName('disable').setDescription('–û—Ç–∫–ª—é—á–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É modmail –¥–ª—è –≤–∞—Å.'))
    .addSubcommand(command => command.setName('close').setDescription('–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤–∞—à —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π modmail.')),
    async execute(interaction, client) {
 
        const sub = interaction.options.getSubcommand();
 
        switch (sub) {
            case 'setup':
 
            if (!interaction.guild) return await interaction.reply({ content: `–í—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ **–õ–°**!`, ephemeral: true})
 
            const data1 = await modschema.findOne({ Guild: interaction.guild.id });
            if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator)) return await interaction.reply({ content: '–£ –≤–∞—Å **–Ω–µ—Ç** —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ!', ephemeral: true});
 
            if (data1) return await interaction.reply({ content: `–í—ã **—É–∂–µ** –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ **modmail** –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ. \n> –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ **/modmail disable**.`, ephemeral: true });
            else {
 
                const category = await interaction.options.getChannel('–∫–∞—Ç–µ–≥–æ—Ä–∏—è');
 
                const setupembed = new EmbedBuilder()
                .setColor("#ecb6d3")
                .setFooter({ text: `üìû –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ú–æ–¥–º–µ–π–ª–∞`})
                .setTimestamp()
                .setTitle('> –ú–æ–¥–º–µ–π–ª –≤–∫–ª—é—á–µ–Ω')
                .addFields({ name: `‚Ä¢ Modmail –±—ã–ª –≤–∫–ª—é—á–µ–Ω`, value: `> –¢–µ–ø–µ—Ä—å –≤–∞—à–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–º–æ–≥—É—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏, \n> –æ—Ç–ø—Ä–∞–≤–∏–≤ –º–Ω–µ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.!`})
                .addFields({ name: `‚Ä¢ –°–æ–≤–µ—Ç`, value: `> –í—ã–π–¥–∞–π—Ç–µ –≤—Å–µ –ø—Ä–∞–≤–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category} –¥–ª—è –±–æ—Ç–∞ Lionet, —Ç–∞–∫ –≤—Å—ë –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞—Ö–æ–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –°—Å—ã–ª–∫–∞: https://discord.gg/fex28jsV8G`})
                .addFields({ name: `‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è`, value: `> ${category}`})
 
                await interaction.reply({ embeds: [setupembed] });
 
                await modschema.create({
                    Guild: interaction.guild.id,
                    Category: category.id
                })
            }
 
            break;
            case 'disable':
 
            if (!interaction.guild) return await interaction.reply({ content: `–í—ã **–Ω–µ –º–æ–∂–µ—Ç–µ** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ **–õ–°**!`, ephemeral: true})
 
            const data = await modschema.findOne({ Guild: interaction.guild.id });
            if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator)) return await interaction.reply({ content: '–£ –≤–∞—Å **–Ω–µ—Ç** —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ!', ephemeral: true});
 
            if (!data) return await interaction.reply({ content: `–í—ã **–Ω–µ** –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ **modmail** –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.`, ephemeral: true });
            else {
 
                const category = await interaction.options.getChannel('–∫–∞—Ç–µ–≥–æ—Ä–∏—è');
 
                const setupembed = new EmbedBuilder()
                .setColor("#ecb6d3")
                .setFooter({ text: `üìû –ú–æ–¥–º–µ–π–ª —É–¥–∞–ª–µ–Ω`})
                .setTimestamp()
                .setTitle('> –ú–æ–¥–º–µ–π–ª –æ—Ç–∫–ª—é—á–µ–Ω')
                .addFields({ name: `‚Ä¢ Modmail –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω`, value: `> –í–∞—à–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–≥—É—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏\n > –æ—Ç–ø—Ä–∞–≤–∏–≤ –º–Ω–µ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`})
 
                await interaction.reply({ embeds: [setupembed] });
                await modschema.deleteMany({ Guild: interaction.guild.id })
 
            }
 
            case 'close':
 
            const usedata = await moduses.findOne({ User: interaction.user.id });
 
            if (!usedata) return await interaction.reply({ content: `–£ –≤–∞—Å **–Ω–µ—Ç** –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ **modmail**!`, ephemeral: true});
            else {
 
                const channel = await client.channels.cache.get(usedata.Channel);
                if (!channel) {
 
                    await interaction.reply({ content: `–í–∞—à **modmail** **–∑–∞–∫—Ä—ã—Ç**!`, ephemeral: true});
                    await moduses.deleteMany({ User: interaction.user.id });
 
                } else {
 
                    await interaction.reply({ content: `–í–∞—à **modmail** –±—ã–ª **–∑–∞–∫—Ä—ã—Ç** —á–µ—Ä–µ–∑ **${channel.guild.name}**!`, ephemeral: true});
                    await moduses.deleteMany({ User: interaction.user.id });
                    await channel.send({ content: `‚ö†Ô∏è ${interaction.user} **–∑–∞–∫—Ä—ã–ª** —Å–≤–æ–π **modmail**!`});
 
                }
            }
        }
    }
}