const { SlashCommandBuilder, ApplicationCommandOptionType } = require('discord.js');
//import { Emojis as e } from '../../../../util/util.js'
const thumbnailIcons = {
    broken: "https://media.discordapp.net/attachments/893361065084198954/1089006583788359742/broken.gif",
    flyingHearts: "https://media.discordapp.net/attachments/893361065084198954/1089006584203591720/higer.gif",
    complete: "https://media.discordapp.net/attachments/893361065084198954/1089007634876735528/complete.gif"
}

module.exports = {

    data: new SlashCommandBuilder()
        .setName('ship')
        .setDescription("–£–≤–∏–¥–µ—Ç—å –ª—é–±–æ–≤—å –º–µ–∂–¥—É –¥–≤—É–º—è –ª—é–¥—å–º–∏.")
    .addUserOption(option => 
      option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
      .setDescription('–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞')
      .setRequired(true))
    .addUserOption(option => 
      option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å2')
      .setDescription('–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
      .setRequired(true)

    ),
            
    async execute(interaction, client) {

        const { options } = interaction
        const userone = options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        const usertwo = options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å2')

        if (userone.id == usertwo.id)
            return await interaction.reply({
                content: `–ù–µ –Ω–∞–¥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ —Å –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ —á–µ–ª–æ–≤–µ–∫–æ–º, –ª–∞–¥–Ω–æ?`,
                ephemeral: true
            })

        const percent = Math.floor(Math.random() * 100) + 1
        const { emoji, url, description, result } = build()

        return await interaction.reply({
            embeds: [{
                color: client.blue,
                title: `${emoji} ${client.user.username}| –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å `,
                thumbnail: { url },
                description: `${description}\n \n${result}`,
            }]
        })

        function build() {

            const hearts = { red: "‚ù§Ô∏è", white: "ü§ç", percent: percent, bar: [] }

            for (let i = 0; i < 10; i++) {
                hearts.percent > 1
                    ? hearts.bar.push(hearts.red)
                    : hearts.bar.push(hearts.white)
                hearts.percent -= 10
            }

            const userMention = `${userone} –ò ${usertwo}`
            const heartsRedLength = hearts.bar.filter(heart => heart == hearts.red).length
            const result = {
                0: { url: thumbnailIcons.broken, emoji: "üñ§", description: `–ú–µ–∂–¥—É –Ω–∏–º–∏ –Ω–µ—Ç –ª—é–±–≤–∏ ${userMention}.` },
                1: { url: thumbnailIcons.broken, emoji: "üíî", description: `–ù–µ—Ç –Ω–∏—á–µ–≥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–≥–æ, –Ω–µ —Ç–∞–∫ –ª–∏? ${userMention}? –Ø –¥—É–º–∞—é...` },
                2: { url: thumbnailIcons.broken, emoji: 'üíô', description: `–ù–∞–¥–µ–∂–¥–∞ - —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ ${userMention}.` },
                3: { url: thumbnailIcons.broken, emoji: '‚ù£Ô∏è', description: `–ù–∏—á–µ–≥–æ, —á—Ç–æ –≤—Ä–µ–º—è –Ω–µ –º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –º–µ–∂–¥—É ${userMention}.` },
                4: { url: thumbnailIcons.broken, emoji: 'üíï', description: `–ù–∏—á–µ–≥–æ, –Ω–µ–±–æ–ª—å—à–æ–π —Ä–∞–∑–≥–æ–≤–æ—Ä –º–µ–∂–¥—É ${userMention} –Ω–µ —Ç–æ—á–Ω–æ.` },
                5: { url: thumbnailIcons.flyingHearts, emoji: 'üíò', description: `–ë—É–¥—É—â–µ–µ –∏ –ª—é–±–æ–≤—å ‚Äì —ç—Ç–æ —Ç–æ, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç —É—Å–∏–ª–∏–π —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω. ${userMention}.` },
                6: { url: thumbnailIcons.flyingHearts, emoji: 'üíó', description: `${userMention} –∏–º–µ–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–∏—è–Ω–∏–µ.` },
                7: { url: thumbnailIcons.flyingHearts, emoji: "üíù", description: `–ë–æ–≥–∏ –ª—é–±–≤–∏ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –∏ —É–ª—ã–±–Ω—É–ª–∏—Å—å ${userMention}.` },
                8: { url: thumbnailIcons.complete, emoji: "üíû", description: `${userMention} –±—É–¥—É—Ç –∑–Ω–∞—Ç—å –±—É–¥—É—â–µ–µ, –≥—Ä–∞–Ω–∏—á–∞—â–µ–µ —Å —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–º..` },
                9: { url: thumbnailIcons.complete, emoji: "üíñ", description: `–õ—é–±–æ–≤—å ‚Äì —ç—Ç–æ —Ç–æ, —á—Ç–æ ${userMention} –∑–Ω–∞—é—Ç –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ!` },
                10: { url: thumbnailIcons.complete, emoji: "‚ù§Ô∏è‚Äçüî•", description: `${userMention} –Ω–∞–ø–∏—Å–∞–ª–∏ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ —Å–≤–æ–∏ –≥—Ä–∞–Ω–∏—Ü—ã, –∏ —Å–≤–æ–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏!!!` }
            }[heartsRedLength]

            if (heartsRedLength == 10)
                hearts.bar = hearts.bar.map(heart => heart = "‚ù§Ô∏è‚Äçüî•")

            result.result = `${hearts.bar.join('')} **${percent}%**`

            return result
        }
    }
}