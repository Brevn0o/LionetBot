const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder, PermissionsBitField, MessageEmbed } = require('discord.js');
const ms = require('ms');
const bans = require('../../Schemas/bans');
 
module.exports = {
    data: new SlashCommandBuilder()
    .setName('ban')
    .setDMPermission(false)
    .setDescription('–ó–∞–±–∞–Ω–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
    .addUserOption(option => option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å').setDescription('–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å.').setRequired(true))
    .addStringOption(option => option.setName('–≤—Ä–µ–º—è').setDescription(`–£–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥–µ—Ç –≤—Ä–µ–º–µ–Ω–µ–º –±–∞–Ω–∞. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –±–∞–Ω–∞.`))
    .addStringOption(option => option.setName('–ø—Ä–∏—á–∏–Ω–∞').setDescription('–ü—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.').setRequired(false)),
    async execute(interaction, client, message) {
 
        const users = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
        const ID = users.id;
        const banUser = client.users.cache.get(ID);
        const banmember = interaction.options.getMember('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
        const optiontime = interaction.options.getString('–≤—Ä–µ–º—è');
 
        let time = ``;
        if (!optiontime) {
            time = `notime`;
        } else {
            time = ms(optiontime);
        }
 
        if (!interaction.member.permissions.has(PermissionsBitField.Flags.BanMembers)) return await interaction.reply({ content: '–£ –≤–∞—Å **–Ω–µ—Ç** —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ!', ephemeral: true});
        if (interaction.member.id === ID) return await interaction.reply({ content: '–¢—ã **–Ω–µ –º–æ–∂–µ—à—å** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —Å–µ–±–µ –±–∞–Ω..', ephemeral: true});
        if (!banmember) return await interaction.reply({ content: `–≠—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **–Ω–µ** —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ.`, ephemeral: true});
 
        let reason = interaction.options.getString('–ø—Ä–∏—á–∏–Ω–∞');
        if (!reason) reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ :('
 
        const dmembed = new EmbedBuilder()
        .setColor("DarkRed")
        .setTitle(`<:emoji_5:1140607910678908938>| –ó–∞–±–∞–Ω–µ–Ω`)
        .setDescription (`> –í–∞–º –∑–∞–ø—Ä–µ—Ç–∏–ª–∏ –¥–æ—Å—Ç—É–ø –≤ "${interaction.guild.name}"`)
        .addFields({ name: '‚Ä¢ –°–µ—Ä–≤–µ—Ä', value: `> ${interaction.guild.name}`, inline: true})
        .addFields({ name: '‚Ä¢ –ü—Ä–∏—á–∏–Ω–∞', value: `> ${reason}`, inline: true})
        .setFooter({ text: 'üî® –ë–∞–Ω'})
        .setTimestamp()
        
        const embed = new EmbedBuilder()
        .setColor("DarkRed")
        .setTitle(`<:emoji_5:1140607910678908938>| –ó–∞–±–∞–Ω–µ–Ω`)
        .setDescription (`> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω!`)
        .addFields({ name: '‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `> ${banUser.tag}`, inline: true})
        .addFields({ name: '‚Ä¢ –ü—Ä–∏—á–∏–Ω–∞', value: `> ${reason}`, inline: true})
        .setFooter({ text: 'üî® –ë–∞–Ω'})
        .setTimestamp()
 
        if (time !== 'notime') {
            embed.addFields({ name: `‚Ä¢ –í—Ä–µ–º—è`, value: `> <t:${Math.floor(Date.now()/1000 + time/1000)}:R>`})
            dmembed.addFields({ name: `‚Ä¢ –í—Ä–µ–º—è`, value: `> <t:${Math.floor(Date.now()/1000 + time/1000)}:R>`})
        }
 
        try {
            await interaction.guild.bans.create(banUser.id, {reason})
        } catch {
            return interaction.reply({ content: `**–ù–µ —É–¥–∞–ª–æ—Å—å** –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–æ—é **–º–æ–∏ –ø—Ä–∞–≤–∞ –Ω–∞ –±–∞–Ω** –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.`, ephemeral: true})
        }
 
        await banUser.send({ embeds: [dmembed] }).catch();
        await interaction.reply({ embeds: [embed] });
 
        if (time === 'notime') return;
        else {
            await bans.create({
                Guild: interaction.guild.id,
                User: banUser.id,
                Time: time
            })
        }
    }
}