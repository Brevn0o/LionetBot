const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits, PermissionsBitField } = require('discord.js');
const disabled = require("../../Schemas/Panel/Systems/poll");

module.exports = {
    data: new SlashCommandBuilder()
        .setName('poll')
        .setDescription('–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å')
                        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
        .addStringOption(option =>
            option.setName('–∑–∞–≥–æ–ª–æ–≤–æ–∫')
                .setDescription('–ù–∞–∑–≤–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('–ø–∞—Ä–∞–º–µ—Ç—Ä—ã')
                .setDescription('–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø—Ä–æ—Å–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ "|"')
                .setRequired(true))
        .addChannelOption(option =>
            option.setName('–∫–∞–Ω–∞–ª')
                .setDescription('–ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–∞')
                .setRequired(true)),

    async execute(interaction, client) {
        
        const DISABLED = await disabled.findOne({ Guild: interaction.guild.id });

if (DISABLED) {
 await interaction.reply({
 content: "‚ùå –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ!",
 ephemeral: true
});
return;
}  
        const title = interaction.options.getString('–∑–∞–≥–æ–ª–æ–≤–æ–∫');
        const options = interaction.options.getString('–ø–∞—Ä–∞–º–µ—Ç—Ä—ã').split('|').map(option => option.trim());
        const channel = interaction.options.getChannel('–∫–∞–Ω–∞–ª');

        const emojis = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü'];
        const pollOptions = options.slice(0, emojis.length);

        const embed = new EmbedBuilder()
            .setTitle(title)
            .setColor('Random')
            .setTimestamp();
            for (let i = 0; i < pollOptions.length; i++) {
              embed.addFields({ name: `–í–∞—Ä–∏–∞–Ω—Ç ${i + 1}`, value: pollOptions[i], inline: true });
            }
            await interaction.reply(`–û–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ <#${channel.id}>`)
        const pollMessage = await channel.send({ embeds: [embed] });

        for (let i = 0; i < pollOptions.length; i++) {
            await pollMessage.react(emojis[i]);
        }
    
  }
};
