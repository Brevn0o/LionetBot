const {
    SlashCommandBuilder,
    EmbedBuilder,
    ChatInputCommandInteraction,
    PermissionFlagsBits,
    AttachmentBuilder,
  } = require("discord.js");
  const axios = require("axios");
  module.exports = {
    developers: false,
    data: new SlashCommandBuilder()
      .setName("mineinfo")
      .setDMPermission(false)
      .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç —Å–µ—Ä–≤")
      .setDefaultMemberPermissions(PermissionFlagsBits.AddReactions)
      .addStringOption((op) =>
        op.setName("–∞–π–ø–∏").setDescription("–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç —Å–µ—Ä–≤–µ—Ä –∞–π–ø–∏").setRequired(true)
      ),
    /**
     * @param {ChatInputCommandInteraction} interaction
     * @param {Client} client
     */
    async execute(interaction, client) {
      //await interaction.deferReply();
      const ip = interaction.options.getString("–∞–π–ø–∏");
      const embed = new EmbedBuilder();
      const response = await axios.get("https://api.mcsrvstat.us/2/" + ip);
      const online = response.data.online;
  
      if (online === false) {
        embed.setColor("Red").setTitle("`üî¥` –û—Ñ—Ñ–ª–∞–π–Ω").setFooter({ text: `–õ–µ–≤ | ¬© 2023 –≤—Å—ë –∑–∞—â–∏—â–µ–Ω–æ –Ω–∞ –ª—å–≤–∏–Ω—ã—Ö –ø—Ä–∞–≤–∞—Ö.`, iconURL: client.user.displayAvatarURL() }).setDescription(`
        –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ—Ñ—Ñ–ª–∞–π–Ω.
        **–ò–º—è —Ö–æ—Å—Ç–∞:** \`${ip}\`
          `);
        await interaction.reply({ embeds: [embed] });
      } else {
        if (response.data.players.list) {
          embed.addFields({
            name: "`üôé‚Äç‚ôÇÔ∏è`–ò–≥—Ä–æ–∫–æ–≤:",
            value: `\`‚Ä¢\`${response.data.players.list.join("\n`‚Ä¢`")}` || "–ù–µ—Ç",
          });
        }
        embed
          .setColor("Green")
          .setTitle("`üü¢` –û–Ω–ª–∞–π–Ω")
          .setFooter({ text: `–õ–µ–≤ | ¬© 2023 –≤—Å—ë –∑–∞—â–∏—â–µ–Ω–æ –Ω–∞ –ª—å–≤–∏–Ω—ã—Ö –ø—Ä–∞–≤–∞—Ö.`, iconURL: client.user.displayAvatarURL() })
          .setDescription(
            `
          \`üîé\`–°–µ—Ä–≤–µ—Ä –ò–Ω—Ñ–æ:
           \`üåê\`**–ê–π–ø–∏:** \*${response.data.ip}:${
              response.data.port || 25565
            }\* –∏–ª–∏ \*${response.data.hostname || "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ"}\*
           \`üü¢\`**–û–Ω–ª–∞–π–Ω:** ${response.data.players.online}/${
              response.data.players.max
            }
           \`üÜö\`**–í–µ—Ä—Å–∏—è:** ${response.data.version}
           \`üë®‚Äçüíª\`**–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ:** ${response.data.software || "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ"}
           \`üßß\`**–û–ø–∏—Å–∞–Ω–∏–µ:** \n\*\*${response.data.motd.clean
             .toString()
             .replace(",", "\n")}\*\*
          `
          );
        const base64Image = response.data.icon;
        if (!base64Image) {
          embed.setThumbnail(
            `https://cdn.discordapp.com/attachments/1064929632136212532/1102818252918378496/4422-minecraftpartyparrotr.gif`
          );
          await interaction.reply({ embeds: [embed] });
        } else {
          const base64Data = base64Image.replace(/^data:image\/\w+;base64,/, "");
          const bufferIcon = await Buffer.from(base64Data, "base64");
          const attachments = new AttachmentBuilder()
          .setName("icon.png")
          .setFile(bufferIcon)
          .setDescription("Server Icon.");
        embed.setThumbnail(`attachment://${attachments.name}`);
        await interaction.reply({ embeds: [embed], files: [attachments] });
        }
      }
    },
  };